openapi: 3.0.0
info:
  title: Accountability Layer API
  version: "1.0"
  description: >
    API documentation for the Accountability Layer project, including endpoints for logging, authentication,
    anomaly detection, and roleâ€‘based access control.
servers:
  - url: http://localhost:5000/api/v1
paths:
  /auth/login:
    post:
      summary: "User login"
      description: "Authenticates a user and returns a JWT token."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: "Authentication successful, returns JWT token."
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: "Invalid credentials."
  /logs:
    post:
      summary: "Create a new log entry"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agent_id:
                  type: string
                step_id:
                  type: integer
                trace_id:
                  type: string
                user_id:
                  type: string
                timestamp:
                  type: string
                  format: date-time
                input_data:
                  type: object
                output:
                  type: object
                reasoning:
                  type: string
                status:
                  type: string
                  enum: [success, failure, anomaly]
                reviewed:
                  type: boolean
                review_comments:
                  type: string
                metadata:
                  type: object
                version:
                  type: number
              required:
                - agent_id
                - step_id
                - input_data
                - output
                - reasoning
      responses:
        '201':
          description: "Log created successfully."
  /logs/{agent_id}:
    get:
      summary: "Retrieve logs for a specific agent"
      parameters:
        - in: path
          name: agent_id
          schema:
            type: string
          required: true
          description: "Agent identifier."
      responses:
        '200':
          description: "A list of log entries."
  /logs/{agent_id}/{step_id}:
    get:
      summary: "Retrieve detailed log entry"
      parameters:
        - in: path
          name: agent_id
          schema:
            type: string
          required: true
          description: "Agent identifier."
        - in: path
          name: step_id
          schema:
            type: integer
          required: true
          description: "Step identifier."
      responses:
        '200':
          description: "Detailed log entry."
    put:
      summary: "Update log review status"
      description: "Allows authorized users to mark a log entry as reviewed or update review comments. Only applicable for anomaly or pending review logs."
      parameters:
        - in: path
          name: agent_id
          schema:
            type: string
          required: true
          description: "Agent identifier."
        - in: path
          name: step_id
          schema:
            type: integer
          required: true
          description: "Step identifier."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewed:
                  type: boolean
                review_comments:
                  type: string
              required:
                - reviewed
      responses:
        '200':
          description: "Log updated successfully."
        '400':
          description: "Invalid update or log not found."
  /logs/search:
    get:
      summary: "Search logs with filters"
      parameters:
        - in: query
          name: agent_id
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
          description: "Filter by log status."
        - in: query
          name: trace_id
          schema:
            type: string
        - in: query
          name: from_date
          schema:
            type: string
            format: date
        - in: query
          name: to_date
          schema:
            type: string
            format: date
        - in: query
          name: keyword
          schema:
            type: string
          description: "Keyword search in log details."
      responses:
        '200':
          description: "A filtered list of log entries."
  /logs/summary/{agent_id}:
    get:
      summary: "Get summary statistics for logs of an agent"
      parameters:
        - in: path
          name: agent_id
          schema:
            type: string
          required: true
          description: "Agent identifier."
      responses:
        '200':
          description: "Summary of logs including total count, anomalies, and review statuses."
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
